# Port
server.port=8085
#
# Optimization
## Enable response compression
server.compression.enabled=true
# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024
## Enabling HTTP/2 support in Spring Boot
server.http2.enabled=true
#
# Redis config
##  redis config
spring.redis.host=localhost
spring.redis.port=6379
##Maximum number of idle connections
#spring.redis.jedis.pool.max-active=8
## Minimum number of idle connections
#spring.redis.jedis.pool.max-idle=8
## The maximum time to wait for an available connection, the negative number is unlimited
#spring.redis.jedis.pool.max-wait=-1
## Maximum number of active connections, negative numbers are not limited
#spring.redis.jedis.pool.min-idle=1
## Database connection timeout period, the type of this parameter is Duration in 2.0, here you need to specify the unit when configuring 1.x can configure this parameter to 10000 units is ms
## Connection pool configuration, use jedis or letuce to configure connection pool directly in 2.0
#spring.redis.timeout=60s
#spring.redis.database=0
##
#Data source
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/tweet
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=true
spring.jpa.open-in-view=false
spring.main.allow-bean-definition-overriding=true
#
# Open Api Documentation
springdoc.api-docs.path=/twitter-api-docs
springdoc.swagger-ui.path=/my-twitter-api-docs
#
# Configuration rules
query=matching_rules: [{ followers_count:1500, lang:[es, fr, it] }]
